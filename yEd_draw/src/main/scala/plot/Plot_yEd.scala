package plot

import java.io.{File, PrintWriter}
import spinal.core._
class Plot_yEd (module: Module) {
  val file = new File("yEd.graphml")
  val pw = new PrintWriter(file)
  val moduleanalyze = new ModuleAnalyzer(module)
  val allnets = moduleanalyze.getNets(_ => true)
  val toplevelname ="toplevel"
  def begindraw={
    pw.write("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<graphml xmlns=\"http://graphml.graphdrawing.org/xmlns\" xmlns:java=\"http://www.yworks.com/xml/yfiles-common/1.0/java\" xmlns:sys=\"http://www.yworks.com/xml/yfiles-common/markup/primitives/2.0\" xmlns:x=\"http://www.yworks.com/xml/yfiles-common/markup/2.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:y=\"http://www.yworks.com/xml/graphml\" xmlns:yed=\"http://www.yworks.com/xml/yed/3\" xsi:schemaLocation=\"http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.1/ygraphml.xsd\">\n  <!--Created by yEd 3.22-->\n  <key attr.name=\"Description\" attr.type=\"string\" for=\"graph\" id=\"d0\"/>\n  <key for=\"port\" id=\"d1\" yfiles.type=\"portgraphics\"/>\n  <key for=\"port\" id=\"d2\" yfiles.type=\"portgeometry\"/>\n  <key for=\"port\" id=\"d3\" yfiles.type=\"portuserdata\"/>\n  <key attr.name=\"url\" attr.type=\"string\" for=\"node\" id=\"d4\"/>\n  <key attr.name=\"description\" attr.type=\"string\" for=\"node\" id=\"d5\"/>\n  <key for=\"node\" id=\"d6\" yfiles.type=\"nodegraphics\"/>\n  <key for=\"graphml\" id=\"d7\" yfiles.type=\"resources\"/>\n  <key attr.name=\"url\" attr.type=\"string\" for=\"edge\" id=\"d8\"/>\n  <key attr.name=\"description\" attr.type=\"string\" for=\"edge\" id=\"d9\"/>\n  <key for=\"edge\" id=\"d10\" yfiles.type=\"edgegraphics\"/>\n  <graph edgedefault=\"directed\" id=\"G\">\n    <data key=\"d0\"/>\n")
    drawtoplevel
    drawblackbox
    pw.write("      </graph>\n    </node>\n")
    drawwires
    pw.write("  </graph>\n  <data key=\"d7\">\n    <y:Resources/>\n  </data>\n</graphml>")
    pw.close()
  }
  def drawtoplevel = {
    val allinputs=moduleanalyze.getInputs
    val allouputs=moduleanalyze.getOutputs
    pw.write("    <node id=\"" + toplevelname + "\" yfiles.foldertype=\"group\">\n      <data key=\"d4\" xml:space=\"preserve\"/>\n      <data key=\"d5\"/>\n      <data key=\"d6\">\n        <y:ProxyAutoBoundsNode>\n          <y:Realizers active=\"0\">\n            <y:GroupNode>\n              <y:Geometry height=\"2000\" width=\"2000\" x=\"113.0\" y=\"217.0\"/>\n              <y:Fill color=\"#CAECFF84\" transparent=\"false\"/>\n              <y:BorderStyle color=\"#666699\" type=\"dotted\" width=\"1.0\"/>\n              <y:NodeLabel alignment=\"right\" autoSizePolicy=\"node_width\" backgroundColor=\"#99CCFF\" borderDistance=\"0.0\" fontFamily=\"Dialog\" fontSize=\"15\" fontStyle=\"plain\" hasLineColor=\"false\" height=\"22.37646484375\" horizontalTextPosition=\"center\" iconTextGap=\"4\" modelName=\"internal\" modelPosition=\"t\" textColor=\"#000000\" verticalTextPosition=\"bottom\" visible=\"true\" width=\"780.3333333333335\" x=\"0.0\" xml:space=\"preserve\" y=\"0.0\">" + toplevelname + "</y:NodeLabel>\n              <y:Shape type=\"roundrectangle\"/>\n              <y:State closed=\"false\" closedHeight=\"50.0\" closedWidth=\"50.0\" innerGraphDisplayEnabled=\"false\"/>\n              <y:Insets bottom=\"15\" bottomF=\"15.0\" left=\"15\" leftF=\"15.0\" right=\"15\" rightF=\"15.0\" top=\"15\" topF=\"15.0\"/>\n              <y:BorderInsets bottom=\"0\" bottomF=\"0.0\" left=\"0\" leftF=\"0.0\" right=\"0\" rightF=\"0.0\" top=\"0\" topF=\"0.0\"/>\n            </y:GroupNode>\n            <y:GroupNode>\n              <y:Geometry height=\"50.0\" width=\"50.0\" x=\"113.0\" y=\"217.0\"/>\n              <y:Fill color=\"#CAECFF84\" transparent=\"false\"/>\n              <y:BorderStyle color=\"#666699\" type=\"dotted\" width=\"1.0\"/>\n              <y:NodeLabel alignment=\"right\" autoSizePolicy=\"node_width\" backgroundColor=\"#99CCFF\" borderDistance=\"0.0\" fontFamily=\"Dialog\" fontSize=\"15\" fontStyle=\"plain\" hasLineColor=\"false\" height=\"22.37646484375\" horizontalTextPosition=\"center\" iconTextGap=\"4\" modelName=\"internal\" modelPosition=\"t\" textColor=\"#000000\" verticalTextPosition=\"bottom\" visible=\"true\" width=\"55.70166015625\" x=\"-2.850830078125\" xml:space=\"preserve\" y=\"0.0\">" + toplevelname + "</y:NodeLabel>\n              <y:Shape type=\"roundrectangle\"/>\n              <y:State closed=\"true\" closedHeight=\"50.0\" closedWidth=\"50.0\" innerGraphDisplayEnabled=\"false\"/>\n              <y:Insets bottom=\"15\" bottomF=\"15.0\" left=\"15\" leftF=\"15.0\" right=\"15\" rightF=\"15.0\" top=\"15\" topF=\"15.0\"/>\n              <y:BorderInsets bottom=\"0\" bottomF=\"0.0\" left=\"0\" leftF=\"0.0\" right=\"0\" rightF=\"0.0\" top=\"0\" topF=\"0.0\"/>\n            </y:GroupNode>\n          </y:Realizers>\n        </y:ProxyAutoBoundsNode>\n      </data>\n      <graph edgedefault=\"directed\" id=\"" + toplevelname + ":\">\n")
    while (allnets.nonEmpty&&allnets.head.getComponent().getDisplayName()==toplevelname) {
      val thisnet = allnets.head
      if(allinputs.contains(thisnet))  pw.write("        <node id=\""+toplevelname+"::"+thisnet.getName()+ "\">\n          <data key=\"d5\"/>\n          <data key=\"d6\">\n            <y:ShapeNode>\n              <y:Geometry height=\"80.0\" width=\"80.0\" x=\"120.5\" y=\"265.5302734375001\"/>\n              <y:Fill color=\"#00FF00\" transparent=\"false\"/>\n              <y:BorderStyle color=\"#000000\" raised=\"false\" type=\"line\" width=\"1.0\"/>\n              <y:NodeLabel alignment=\"center\" autoSizePolicy=\"node_width\" configuration=\"CroppingLabel\" fontFamily=\"Dialog\" fontSize=\"12\" fontStyle=\"plain\" hasBackgroundColor=\"false\" hasLineColor=\"false\" height=\"18.701171875\" horizontalTextPosition=\"center\" iconTextGap=\"4\" modelName=\"custom\" textColor=\"#000000\" verticalTextPosition=\"bottom\" visible=\"true\" width=\"28.0\" x=\"1.0\" xml:space=\"preserve\" y=\"5.6494140625\">" + thisnet.getName() + "<y:LabelModel><y:SmartNodeLabelModel distance=\"4.0\"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX=\"0.0\" labelRatioY=\"0.0\" nodeRatioX=\"0.0\" nodeRatioY=\"0.0\" offsetX=\"0.0\" offsetY=\"0.0\" upX=\"0.0\" upY=\"-1.0\"/></y:ModelParameter></y:NodeLabel>\n              <y:Shape type=\"ellipse\"/>\n            </y:ShapeNode>\n          </data>\n        </node>\n")
      else if(allouputs.contains(thisnet))  pw.write("        <node id=\""+toplevelname+"::"+thisnet.getName()+ "\">\n          <data key=\"d5\"/>\n          <data key=\"d6\">\n            <y:ShapeNode>\n              <y:Geometry height=\"80.0\" width=\"80.0\" x=\"120.5\" y=\"265.5302734375001\"/>\n              <y:Fill color=\"#FF00FF\" transparent=\"false\"/>\n              <y:BorderStyle color=\"#000000\" raised=\"false\" type=\"line\" width=\"1.0\"/>\n              <y:NodeLabel alignment=\"center\" autoSizePolicy=\"node_width\" configuration=\"CroppingLabel\" fontFamily=\"Dialog\" fontSize=\"12\" fontStyle=\"plain\" hasBackgroundColor=\"false\" hasLineColor=\"false\" height=\"18.701171875\" horizontalTextPosition=\"center\" iconTextGap=\"4\" modelName=\"custom\" textColor=\"#000000\" verticalTextPosition=\"bottom\" visible=\"true\" width=\"28.0\" x=\"1.0\" xml:space=\"preserve\" y=\"5.6494140625\">" + thisnet.getName() + "<y:LabelModel><y:SmartNodeLabelModel distance=\"4.0\"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX=\"0.0\" labelRatioY=\"0.0\" nodeRatioX=\"0.0\" nodeRatioY=\"0.0\" offsetX=\"0.0\" offsetY=\"0.0\" upX=\"0.0\" upY=\"-1.0\"/></y:ModelParameter></y:NodeLabel>\n              <y:Shape type=\"diamond\"/>\n            </y:ShapeNode>\n          </data>\n        </node>\n")
      else    pw.write("              <node id=\""+toplevelname+"::"+thisnet.getName()+"\">\n              <data key=\"d5\"/>\n              <data key=\"d6\">\n                <y:ShapeNode>\n                  <y:Geometry height=\"60.0\" width=\"60.0\" x=\"44.63096819944593\" y=\"412.15060121883647\"/>\n                  <y:Fill color=\"#FFCC00\" transparent=\"false\"/>\n                  <y:BorderStyle color=\"#000000\" raised=\"false\" type=\"line\" width=\"1.0\"/>\n                  <y:NodeLabel alignment=\"center\" autoSizePolicy=\"node_width\" configuration=\"CroppingLabel\" fontSize=\"12\" fontStyle=\"plain\" hasBackgroundColor=\"false\" hasLineColor=\"false\" height=\"18.701171875\" horizontalTextPosition=\"center\" iconTextGap=\"4\" modelName=\"custom\" textColor=\"#000000\" verticalTextPosition=\"bottom\" visible=\"true\" width=\"28.0\" x=\"1.0\" xml:space=\"preserve\" y=\"5.6494140625\">"+thisnet.getName()+"<y:LabelModel><y:SmartNodeLabelModel distance=\"4.0\"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX=\"0.0\" labelRatioY=\"0.0\" nodeRatioX=\"0.0\" nodeRatioY=\"0.0\" offsetX=\"0.0\" offsetY=\"0.0\" upX=\"0.0\" upY=\"-1.0\"/></y:ModelParameter></y:NodeLabel>\n                  <y:Shape type=\"rectangle\"/>\n                </y:ShapeNode>\n              </data>\n            </node>\n")
      allnets.remove(allnets.head)
    }
  }
  def drawblackbox={
    if(allnets.nonEmpty){
      var thisnet = allnets.head
      var groupname = thisnet.getComponent().getDisplayName()
      pw.write("        <node id=\""+toplevelname+"::"+groupname+"\" yfiles.foldertype=\"folder\">\n          <data key=\"d4\" xml:space=\"preserve\"/>\n          <data key=\"d5\"/>\n          <data key=\"d6\">\n            <y:ProxyAutoBoundsNode>\n              <y:Realizers active=\"1\">\n                <y:GroupNode>\n                  <y:Geometry height=\"177.6472022160665\" width=\"240.75368421052642\" x=\"236.85855822714691\" y=\"344.781072132964\"/>\n                  <y:Fill color=\"#00FFFF\" transparent=\"false\"/>\n                  <y:BorderStyle color=\"#000000\" type=\"line\" width=\"1.0\"/>\n                  <y:NodeLabel alignment=\"right\" autoSizePolicy=\"node_width\" backgroundColor=\"#00CCFF\" borderDistance=\"0.0\" fontFamily=\"Dialog\" fontSize=\"15\" fontStyle=\"plain\" hasLineColor=\"false\" height=\"22.37646484375\" horizontalTextPosition=\"center\" iconTextGap=\"4\" modelName=\"internal\" modelPosition=\"t\" textColor=\"#000000\" verticalTextPosition=\"bottom\" visible=\"true\" width=\"240.75368421052642\" x=\"0.0\" xml:space=\"preserve\" y=\"0.0\">"+groupname+"</y:NodeLabel>\n                  <y:Shape type=\"rectangle\"/>\n                  <y:DropShadow color=\"#D2D2D2\" offsetX=\"4\" offsetY=\"4\"/>\n                  <y:State closed=\"false\" closedHeight=\"50.0\" closedWidth=\"50.0\" innerGraphDisplayEnabled=\"false\"/>\n                  <y:Insets bottom=\"15\" bottomF=\"15.0\" left=\"15\" leftF=\"15.0\" right=\"15\" rightF=\"15.0\" top=\"15\" topF=\"15.0\"/>\n                  <y:BorderInsets bottom=\"78\" bottomF=\"78.18581717451536\" left=\"51\" leftF=\"50.935290858725665\" right=\"130\" rightF=\"129.81839335180075\" top=\"17\" topF=\"17.084920197801125\"/>\n                </y:GroupNode>\n                <y:GroupNode>\n                  <y:Geometry height=\"125.0\" width=\"125.0\" x=\"236.8585582271469\" y=\"344.781072132964\"/>\n                  <y:Fill color=\"#00ffff\" transparent=\"false\"/>\n                  <y:BorderStyle color=\"#000000\" type=\"line\" width=\"1.0\"/>\n                  <y:NodeLabel alignment=\"right\" autoSizePolicy=\"node_width\" backgroundColor=\"#00ccff\" borderDistance=\"0.0\" fontFamily=\"Dialog\" fontSize=\"15\" fontStyle=\"plain\" hasLineColor=\"false\" height=\"22.37646484375\" horizontalTextPosition=\"center\" iconTextGap=\"4\" modelName=\"internal\" modelPosition=\"t\" textColor=\"#000000\" verticalTextPosition=\"bottom\" visible=\"true\" width=\"50.0\" x=\"0.0\" xml:space=\"preserve\" y=\"0.0\">"+groupname+"</y:NodeLabel>\n                  <y:Shape type=\"rectangle\"/>\n                  <y:DropShadow color=\"#D2D2D2\" offsetX=\"4\" offsetY=\"4\"/>\n                  <y:State closed=\"true\" closedHeight=\"50.0\" closedWidth=\"50.0\" innerGraphDisplayEnabled=\"false\"/>\n                  <y:Insets bottom=\"15\" bottomF=\"15.0\" left=\"15\" leftF=\"15.0\" right=\"15\" rightF=\"15.0\" top=\"15\" topF=\"15.0\"/>\n                  <y:BorderInsets bottom=\"0\" bottomF=\"0.0\" left=\"0\" leftF=\"0.0\" right=\"0\" rightF=\"0.0\" top=\"0\" topF=\"0.0\"/>\n                </y:GroupNode>\n              </y:Realizers>\n            </y:ProxyAutoBoundsNode>\n          </data>\n          <graph edgedefault=\"directed\" id=\""+toplevelname+"::"+groupname+":\">\n")
      while (allnets.nonEmpty) {
          if(allnets.head.getComponent().getDisplayName()!=groupname){
            pw.write("      </graph>\n        </node>")
            groupname=allnets.head.getComponent().getDisplayName()
            pw.write("        <node id=\""+toplevelname+"::"+groupname+"\" yfiles.foldertype=\"folder\">\n          <data key=\"d4\" xml:space=\"preserve\"/>\n          <data key=\"d5\"/>\n          <data key=\"d6\">\n            <y:ProxyAutoBoundsNode>\n              <y:Realizers active=\"1\">\n                <y:GroupNode>\n                  <y:Geometry height=\"177.6472022160665\" width=\"240.75368421052642\" x=\"293.39035745152364\" y=\"360.4306207202216\"/>\n                  <y:Fill color=\"#00FFFF\" transparent=\"false\"/>\n                  <y:BorderStyle color=\"#000000\" type=\"line\" width=\"1.0\"/>\n                  <y:NodeLabel alignment=\"right\" autoSizePolicy=\"node_width\" backgroundColor=\"#00CCFF\" borderDistance=\"0.0\" fontFamily=\"Dialog\" fontSize=\"15\" fontStyle=\"plain\" hasLineColor=\"false\" height=\"22.37646484375\" horizontalTextPosition=\"center\" iconTextGap=\"4\" modelName=\"internal\" modelPosition=\"t\" textColor=\"#000000\" verticalTextPosition=\"bottom\" visible=\"true\" width=\"240.75368421052642\" x=\"0.0\" xml:space=\"preserve\" y=\"0.0\">"+groupname+"</y:NodeLabel>\n                  <y:Shape type=\"rectangle\"/>\n                  <y:DropShadow color=\"#D2D2D2\" offsetX=\"4\" offsetY=\"4\"/>\n                  <y:State closed=\"false\" closedHeight=\"50.0\" closedWidth=\"50.0\" innerGraphDisplayEnabled=\"false\"/>\n                  <y:Insets bottom=\"15\" bottomF=\"15.0\" left=\"15\" leftF=\"15.0\" right=\"15\" rightF=\"15.0\" top=\"15\" topF=\"15.0\"/>\n                  <y:BorderInsets bottom=\"78\" bottomF=\"78.18581717451536\" left=\"51\" leftF=\"50.935290858725665\" right=\"130\" rightF=\"129.81839335180075\" top=\"17\" topF=\"17.084920197801125\"/>\n                </y:GroupNode>\n                <y:GroupNode>\n                  <y:Geometry height=\"125.0\" width=\"125.0\" x=\"236.8585582271469\" y=\"344.781072132964\"/>\n                  <y:Fill color=\"#00ffff\" transparent=\"false\"/>\n                  <y:BorderStyle color=\"#000000\" type=\"line\" width=\"1.0\"/>\n                  <y:NodeLabel alignment=\"right\" autoSizePolicy=\"node_width\" backgroundColor=\"#00ccff\" borderDistance=\"0.0\" fontFamily=\"Dialog\" fontSize=\"15\" fontStyle=\"plain\" hasLineColor=\"false\" height=\"22.37646484375\" horizontalTextPosition=\"center\" iconTextGap=\"4\" modelName=\"internal\" modelPosition=\"t\" textColor=\"#000000\" verticalTextPosition=\"bottom\" visible=\"true\" width=\"50.0\" x=\"0.0\" xml:space=\"preserve\" y=\"0.0\">"+groupname+"</y:NodeLabel>\n                  <y:Shape type=\"rectangle\"/>\n                  <y:DropShadow color=\"#D2D2D2\" offsetX=\"4\" offsetY=\"4\"/>\n                  <y:State closed=\"true\" closedHeight=\"50.0\" closedWidth=\"50.0\" innerGraphDisplayEnabled=\"false\"/>\n                  <y:Insets bottom=\"15\" bottomF=\"15.0\" left=\"15\" leftF=\"15.0\" right=\"15\" rightF=\"15.0\" top=\"15\" topF=\"15.0\"/>\n                  <y:BorderInsets bottom=\"0\" bottomF=\"0.0\" left=\"0\" leftF=\"0.0\" right=\"0\" rightF=\"0.0\" top=\"0\" topF=\"0.0\"/>\n                </y:GroupNode>\n              </y:Realizers>\n            </y:ProxyAutoBoundsNode>\n          </data>\n          <graph edgedefault=\"directed\" id=\""+toplevelname+"::"+groupname+":\">")
          }
          thisnet=allnets.head
          pw.write("              <node id=\""+toplevelname+"::"+groupname+"::"+thisnet.getName()+"\">\n              <data key=\"d5\"/>\n              <data key=\"d6\">\n                <y:ShapeNode>\n                  <y:Geometry height=\"60.0\" width=\"60.0\" x=\"44.63096819944593\" y=\"412.15060121883647\"/>\n                  <y:Fill color=\"#FFCC00\" transparent=\"false\"/>\n                  <y:BorderStyle color=\"#000000\" raised=\"false\" type=\"line\" width=\"1.0\"/>\n                  <y:NodeLabel alignment=\"center\" autoSizePolicy=\"node_width\" configuration=\"CroppingLabel\" fontFamily=\"Dialog\" fontSize=\"12\" fontStyle=\"plain\" hasBackgroundColor=\"false\" hasLineColor=\"false\" height=\"18.701171875\" horizontalTextPosition=\"center\" iconTextGap=\"4\" modelName=\"custom\" textColor=\"#000000\" verticalTextPosition=\"bottom\" visible=\"true\" width=\"28.0\" x=\"1.0\" xml:space=\"preserve\" y=\"5.6494140625\">"+thisnet.getName()+"<y:LabelModel><y:SmartNodeLabelModel distance=\"4.0\"/></y:LabelModel><y:ModelParameter><y:SmartNodeLabelModelParameter labelRatioX=\"0.0\" labelRatioY=\"0.0\" nodeRatioX=\"0.0\" nodeRatioY=\"0.0\" offsetX=\"0.0\" offsetY=\"0.0\" upX=\"0.0\" upY=\"-1.0\"/></y:ModelParameter></y:NodeLabel>\n                  <y:Shape type=\"rectangle\"/>\n                </y:ShapeNode>\n              </data>\n            </node>\n")
          allnets.remove(allnets.head)
      }
      pw.write("      </graph>\n        </node>\n")
    }
  }
  def drawwires={
      val wires=moduleanalyze.getNets(_=>true)
      while(wires.nonEmpty){
        val thiswire=wires.head
        val thisfanout= new DataAnalyzer(thiswire).getFanOut
        while(thisfanout.nonEmpty){
          if(thiswire.getName()!=thisfanout.head.getName()||thiswire.getComponent().getName()!=thisfanout.head.getComponent().getName()){
            pw.write("    <edge id=\""+toplevelname+"::"+thiswire.getComponent().getName()+"::"+thiswire.getName()+"::"+thisfanout.head.getName()+"::\" ")
            if (thiswire.getComponent().getName() == toplevelname) pw.write("source=\"" + toplevelname + "::" + thiswire.getName() + "\"")
            else  pw.write("source=\""+toplevelname+"::"+thiswire.getComponent().getName()+"::"+thiswire.getName()+"\"")
            if(thisfanout.head.getComponent().getName()==toplevelname) pw.write(" target=\""+toplevelname + "::" + thisfanout.head.getName()+"\">\n")
            else pw.write(" target=\""+toplevelname+"::"+thisfanout.head.getComponent().getName()+"::"+thisfanout.head.getName()+"\">\n")
            pw.write("      <data key=\"d9\"/>\n      <data key=\"d10\">\n        <y:PolyLineEdge>\n          <y:Path sx=\"0.0\" sy=\"0.0\" tx=\"0.0\" ty=\"0.0\"/>\n          <y:LineStyle color=\"#000000\" type=\"line\" width=\"1.0\"/>\n          <y:Arrows source=\"none\" target=\"standard\"/>\n          <y:BendStyle smoothed=\"true\"/>\n        </y:PolyLineEdge>\n      </data>\n    </edge>\n")
          }
          thisfanout.remove(thisfanout.head)
        }
        wires.remove(wires.head)
      }
  }
}
